# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gCwHtV5TV5oP4derH709vu_e3fvKRR6k
"""

import pandas as pd
from flask import Flask, render_template, request
from pycaret.classification import load_model, predict_model

app = Flask(__name__)

try:
    model = load_model('deployment_07052024')
except FileNotFoundError:
    print("Error: Model file 'deployment_07052024' not found.")
    model = None

cols = ['lon', 'lat', 'year', 'geoUncertaintyInM', 'areaInM2', 'region', 'country', 'speciesId', 'surveyId']

@app.route('/')
def home():
    return render_template("home.html")

@app.route('/predict', methods=['POST'])
def predict():
    if model is None:
        return "Error: Model not loaded. Please check the model file."

    try:
        # Extract input features from form data and convert to appropriate data types
        init_features = [float(x) if x.replace('.', '', 1).isdigit() else x for x in request.form.values()]

        # Create DataFrame using input features
        data_unseen = pd.DataFrame([init_features], columns=cols)

        # Make predictions using the loaded model
        prediction = predict_model(model, data=data_unseen, round=0)

        # Extract predicted label
        prediction = int(prediction.Label[0])

        # Render prediction result on template
        return render_template('home.html', pred='Expected species will be {}'.format(prediction))
    except Exception as e:
        return f"Error: {str(e)}"

if __name__ == '__main__':
    app.run(debug=True)